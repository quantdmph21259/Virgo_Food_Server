import web from '../controllers/web'
import { requireLoggedIn, upload } from '../functions/middleware'
import express from 'express'
import cookieParser from 'cookie-parser'

let route = express.Router()

const initWebRoutes = (app) => {
    app.get('/login', web.getLoginScreen)
    app.get('/sign-up', web.getSignUpScreen)
    app.get('/', cookieParser(), requireLoggedIn, web.getHomeScreen)
    app.get('/category', web.getCategoryScreen)
    app.get('/categories-parent', web.getCategoriesParent)
    app.get('/categories-child', web.getCategoriesChild)
    app.get('/product', web.getProductScreen)
    app.get('/details-product/:id', web.getDetailsProductScreen)
    app.get('/update-foods/:id', web.getUpdateProductScreen)
    app.get('/sale', web.getSaleProductScreen)
    app.get('/rice', web.getRiceScreen)
    app.get('/rice-vegetarian', web.getVegetarianRice)
    app.get('/noodle', web.getNoodleScreen)
    app.get('/fast-food', web.getFastFoodScreen)
    app.get('/milk-tea', web.getMilkTeaScreen)
    app.get('/carbonated-water', web.getCarbonatedWarterScreen)
    app.get('/coffee', web.getCoffeeScreen)
    app.get('/smoothie', web.getSmoothieScreen)
    app.get('/bread', web.getBreadScreen)
    app.get('/custard', web.getCustardCakeScreen)
    app.get('/cupcake', web.getCupCakeScreen)
    app.get('/choxcake', web.getChoxCakeScreen)
    app.get('/tart', web.getTartCakeScreen)
    app.get('/dried-beef', web.getDriedBeef)
    app.get('/dried-chicken', web.getDriedChicken)
    app.get('/rice-paper', web.getRicePaper)
    app.get('/spicy-snack', web.getSpicySnacks)
    app.get('/snack', web.getSnack)
    app.get('/user', web.getAllUserScreen)
    app.get('/admin', web.getAllAdminScreen)
    app.get('/details-users/:id', web.getUserDetailsScreen)
    app.get('/update-user/:id', web.getUpdateUserScreen)
    app.get('/update-category-parent/:id', web.getUpdateCategoryParentScreen)
    app.get('/update-category-child/:id', web.getUpdateCategoryChildScreen)
    app.get('/delete-product/:id', web.getConfirmDeleteProductScreen)
    app.get('/delete-category-child/:id', web.getConfirmDeleteCategoryChildScreen)
    app.get('/delete-category-parent/:id', web.getConfirmDeleteCategoryParentScreen)
    app.get('/delete-user/:id', web.getConfirmDeleteUserScreen)
    app.get('/delete-admin/:id', web.getConfirmDeleteAdminScreen)

    app.post('/handle-sign-up', web.handleSignUp)
    app.post('/handle-login', cookieParser(), web.handleLogin)
    app.post('/handle-log-out', cookieParser(), web.handleLogOut)
    app.post('/handle-add-category-parent', web.handleAddCategoryParent)
    app.post('/handle-add-category-child', web.handleAddCategoryChild)
    app.post('/handle-add-product', upload.single('image'), web.handleAddProduct)
    app.post('/handle-update-product', upload.single('image'), web.handleUpdateProduct)
    app.post('/search-products-by-name', web.handleSearchProductByName)
    app.post('/handle-delete-category-parent/:id', web.handleDeleteCategoryParent)
    app.post('/handle-delete-category-child/:id', web.handleDeleteCategoryChild)
    app.post('/search-user-by-name', web.handleSearchUserByName)
    app.post('/handle-delete-user/:id', web.handleDeleteUserById)
    app.post('/handle-udpate-user', upload.single('image'), web.handleUpdateUserById)
    app.post('/handle-update-category-parent', web.handleUpdateCategoryParent)
    app.post('/handle-update-category-child', web.handleUpdateCategoryChild)
    app.post('/handle-delete-product/:id', web.handleDeleteProduct)
    app.post('/no-delete', web.handleCancelDelete)

    return app.use('/login', route)
}

export default initWebRoutes